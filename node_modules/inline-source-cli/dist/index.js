#!/usr/bin/env node
'use strict';

var _inlineSource = require('inline-source');

var _inlineSource2 = _interopRequireDefault(_inlineSource);

var _yargs = require('yargs');

var _yargs2 = _interopRequireDefault(_yargs);

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// inline-source --compress false --root ./ in.html [out.html]

var argv = _yargs2.default.usage('Usage: $0 [--compress] [--root cwd] in.html [out.html]').help().boolean('compress').alias('z', 'compress').string('attribute').default('attribute', 'inline').string('root').alias('d', 'root').alias('h', 'help').argv;

var source = argv._[0];

// pass "-" to read from stdin
if (source === '-' || !source) {
	source = '';
	process.stdin.setEncoding('utf8');
	process.stdin.on('readable', function () {
		var chunk = process.stdin.read();
		if (chunk !== null) source += chunk;
	});
	process.stdin.on('end', function () {
		run(source, argv);
	});
} else {
	run(source, argv);
}

function run(source, argv) {
	(0, _inlineSource2.default)(source, {
		compress: argv.compress,
		rootpath: argv.root || argv.rootpath || process.cwd(),
		attribute: argv.attribute
	}, function (err, html) {
		if (err) {
			process.stderr.write('Error: ' + err + '\n');
			return process.exit(1);
		}

		var out = argv._[1];
		if (out) {
			_fs2.default.writeFile(out, html, function (err) {
				if (err) {
					process.stderr.write('Error: ' + err + '\n');
					return process.exit(1);
				}

				process.stderr.write('Written to ' + out + '\n');
				process.exit(0);
			});
		} else {
			process.stdout.write(html + '\n');
			process.exit(0);
		}
	});
}
//# sourceMappingURL=index.js.map